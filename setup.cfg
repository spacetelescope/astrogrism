[metadata]
name = astrogrism
description = HST & JWST Grism Data Analysis
long_description = MOS Data Analysis package for HST and JWST Grism Observations
long_description_content_type = text/plain
keywords = astronomy, astrophysics
author = STScI
author_email = help@stsci.edu
license = BSD
license_file = LICENSE.rst
url = https://github.com/spacetelescope/astrogrism
edit_on_github = False
github_project = spacetelescope/astrogrism
classifiers =
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: Implementation :: CPython
    Topic :: Scientific/Engineering :: Astronomy
    Topic :: Scientific/Engineering :: Physics

[options]
packages = find:
zip_safe = False
setup_requires =
    setuptools_scm
install_requires =
    numpy>=1.17
    astropy>=4
    gwcs
    asdf
    stdatamodels
    jwst
    stsynphot
    specutils
    progressbar
python_requires = >=3.7

[options.extras_require]
test =
    pytest-astropy-header
    pytest-doctestplus
    grismconf
docs =
    sphinx-automodapi
    stsci_rtd_theme

[options.package_data]
astrogrism = config/HST/*, config/common/*

[entry_points]
astrogrism = astrogrism.example_mod:main

[tool:pytest]
minversion = 5.0
norecursedirs = build docs/_build
astropy_header = True
doctest_plus = enabled

[flake8]
max-line-length = 100
# E123: closing bracket does not match indentation of opening bracket's line
# E126: continuation line over-indented for hanging indent
# E226: missing whitespace around arithmetic operator
# E402: Module level import not at top of file
# E741: Ambigious variable name
# W503: line break before binary operator
# W504: line break after binary operator
ignore = E123,E126,E226,E402,E741,W503,W504

[coverage:run]
source = astrogrism
omit =
    astrogrism/config/HST/*
    astrogrism/config/HST/reference_file_generators/*
    astrogrism/tests/*
    astrogrism/version*
    */astrogrism/tests/*
    */astrogrism/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
