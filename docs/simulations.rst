
.. _simulations:

Grism Simulations
=================

Astrogrism provides additional functionality to simulate grism observations
by dispersing a provided spectrum across a given image or a ``numpy.ndarray``
using the geometric transformations defined within the package.

You can quickly simulate a grism image using
``astrogrism.simulate.simulate_grism``, which needs three things:

* ``grism``: Specify one of the supported grisms to simulate
* ``wide_field_image``: An image or array to disperse on
* ``detector``: Which chip on the detector to simulate: only for multichip detectors
* ``spectrum``: A spectrum to disperse (optional). If none provided, a simulated Vega observation will be used.


Spectrum
--------

You can provide your own spectrum to disperse on your image by providing your
own ``specutils.Spectrum1D``. In the event you elect not to provide your own
spectrum, a synthetic Vega spectrum will be generated using ``STSynphot``

Quick Example
-------------

In the following example, a numpy array is generated with a single data point
at coordinates (1999,200) to show the full grism trace. This point is dispersed
according to the G280 grism on detector 1 using the synthetic Vega spectrum
generated by STSynphot:

    >>> import numpy as np
    >>> from astrogrism.simulate import simulate_grism
    >>> data = np.zeros((2000, 400))
    >>> data[1999, 200] = 1
    >>> grism_simulation = simulate_grism('G280', data, detector=1)

The resulting array ``grism_simulation`` can then be plotted in your preferred
plotting tool of choice.
